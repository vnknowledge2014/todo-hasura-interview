{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/events/todo_item_added/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,+BAAoC;AACpC,2CAA8D;AAE9D,qDAA6E;AAEtE,MAAM,kBAAkB,GAAG,CAAO,GAAgB,EAAiB,EAAE;IACxE,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;;QAC/D,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,IAAI;gBACA,MAAM,EACF,cAAc,EACd,UAAU,EACV,UAAU,EACV,sBAAsB,EACzB,GAAG,IAAA,4BAAgB,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAE/B,IAAI,cAAc,KAAK,QAAQ,EAAE;oBAC7B,MAAM,kBAAkB,GAAG,gCACpB,IAAA,8BAAkB,EACjB,sBAAsB,EACtB,cAAc,EACd,UAAU,EACV,UAAU,CAAC,KACf,YAAY,EAAE;4BACV,EAAE,EAAE,sBAAsB,CAAC,EAAE;4BAC7B,KAAK,EAAE,sBAAsB,CAAC,KAAK;4BACnC,SAAS,EAAE,sBAAsB,CAAC,SAAS;yBAC9C,GACmB,CAAC;oBAEzB,MAAM,cAAc,GAAG,MAAM,IAAA,4BAAkB,EAAC,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,IAAA,SAAM,GAAE,EAAE,EAAE,mBAAS,CAAgB,CAAC;oBAE7I,CAAA,MAAA,MAAA,cAAc,CAAC,IAAI,0CAAE,YAAY,0CAAE,aAAa,MAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;iBACtG;qBAAM;oBACH,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;iBACvB;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACvB;SACJ;aAAM;YACH,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACvB;IACL,CAAC,CAAA,CAAC,CAAC;AACP,CAAC,CAAA,CAAA;AAtCY,QAAA,kBAAkB,sBAsC9B","sourcesContent":["import { Application, Request, Response } from \"express\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { GraphqlServicePost, AuditLogM } from \"../../graphql\";\nimport { AuditLogDescription, AuditResult } from \"../../types\";\nimport { auditLogDataFormat, extractEventData } from \"../../utils/eventData\";\n\nexport const todoItemAddedEvent = async (app: Application): Promise<void> => {\n    app.post(\"/todo_item_added\", async (req: Request, res: Response) => {\n        if (Object.keys(req.body).length > 0) {\n            try {\n                const {\n                    operation_name,\n                    table_name,\n                    event_name,\n                    update_event_data_next\n                } = extractEventData(req.body);\n\n                if (operation_name === \"INSERT\") {\n                    const jsonAuditLogFormat = {\n                        ...auditLogDataFormat(\n                            update_event_data_next,\n                            operation_name,\n                            event_name,\n                            table_name),\n                        insert_field: {\n                            id: update_event_data_next.id,\n                            title: update_event_data_next.title,\n                            completed: update_event_data_next.completed\n                        }\n                    } as AuditLogDescription;\n\n                    const audit_log_data = await GraphqlServicePost({ description: JSON.stringify(jsonAuditLogFormat), id: uuidv4() }, AuditLogM) as AuditResult;\n\n                    audit_log_data.data?.insert_audit?.affected_rows === 1 ? res.sendStatus(200) : res.sendStatus(400);\n                } else {\n                    res.sendStatus(400);\n                }\n            } catch (error) {\n                res.sendStatus(400);\n            }\n        } else {\n            res.sendStatus(400);\n        }\n    });\n}\n"]}